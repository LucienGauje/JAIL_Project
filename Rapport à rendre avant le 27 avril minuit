->envoyé à jialin.liu@inria.fr : toutes les personnes doivent etre en copie dans le mail

->compte-rendu sous le nom de 'Equipe2_MiniJava.zip' ~ 10/15pages

le code source (claire et commenté)
+ le rapport qui doit comporter :
  * la contribution claire et précise de chacun
  * la description des algorithmes et la hierarchie des classes du programme
  * l'organisation du travail, les problemes rencontrés et leur solution
  * les limites des solutions proposees
  * le manuel de l'utilisateur (explique ce qu'il doit faire pour utiliser l'IA)


         COMPTE-RENDU
         
Intro : (présenter le but, et parler des differentes choses, apprises durant le semestre, utilisé pour ce projet)

  Nous, une équipe de 3 personnes, avons réalisé un projet commun. Ceci est une 'Intelligence Artificielle' capable de jouer à Sushi Go Round qui est un jeu à base de sprits. Les sprits sont des éléments graphiques de taille fixe, positionnés à une zone donnée sur l'image du jeu. 
  Le but de ce jeu est d'identifier/analyser les commandes des clients, les fabriquer puis servir ces clients.
  
    Afin d’être capable de jouer à ce jeu, plusieurs aptitudes/compétences doivent être mises en pratique telles que :
	- de reconnaître un sprit, correspondant à un plat demandé, dans la bulle de chaque client qui sont au nombre de 6
	- de rechercher dans la base de données/classe Recette, les ingrédients ainsi que leur nombre  dont nous avons besoin pour la préparation du plat
	- de cliquer sur les différentes zones qui correspondent aux différents ingrédients
	- de cliquer sur le tapis pour obtenir le plat souhaité et pour servir le client
Il faut également pouvoir commander de nouveaux ingrédients à l'aide du téléphone, si nous sommes en rupture de stock.
 Toutes ces aptitudes/compétences peuvent etre classées en 3 catégories :
	- le traitement d'image ainsi que sa capture faite auparavant
	- les actions qui en découlent
	- et la capacité de lier traitement d'image et actions (appels de fonctions)
	
   Cela nous amène au point des différentes compétences apprises au cours de ce semestre qui ont été utiles pour mener à bien ce projet. 
 Le code du projet se fait en langage JAVA. De plus, nous avons élaboré un diagramme de classes c'est à dire un diagramme parlant de l'héritage/ la hiérarchisation des classes crées. Ceci fait référence au cours de POnGL (programmation objet et génie logiciel). 
 (au moins encore 1 cours en +, peut etre maths pour info pour l'algorithme)
 
   Dans ce rapport, nous allons donc détailler la répartition du travail, les algorithmes choisis, la hiérarchie des classes construites ainsi que les divers problèmes rencontrés et leur solutions. Nous fourniront, par la suite, un manuel afin d'utiliser notre 'Intelligence Artificielle'.

I) contribution claire et précise de chacun

Jeremie :  class CliqueDefault{}(CliqueAssiette() ) , class Commande (verifIngredient() )
Asma :
Lucien : class Recette{}, class Commande{}, class Ingredient{}, class SubImage{}
Isaline : class CaptureEcran{}, class CreerPlat{}, (class CompareImage{}), class Jeu{} (JeuPlat(), JeuVerifIngredient(), JeuCliqueDefault() ), class CliqueDefault{} (CliqueSuivant() )

II) description des algorithmes et la hierarchie des classes du programme(Diagramme de classes)
III) organisation du travail, les problemes rencontrés et leur solution
prob:

solutions:

IV) annexe : le manuel de l'utilisateur

Conclusion : 
découvertes des classe de l’API standard tels que 'BufferedImage', 'ImageIO', 'Robot', et de 'threads'
comprendre le traitement d'images et les pixels associés
